C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 21:21:27 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil 5\c51\keil(相关软件)\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC15F2K60S2.h"
   2          #include "iic.h"
   3          
   4          #define u8 unsigned char
   5          #define u16 unsigned int
   6          
   7          u8 dspbuf[8] = {10,10,10,10,10,10,10,10};  
   8          u8 code tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0x40,0x79,0x24,0x30,0x19,0x12,0x02
             -,0x78,0x00,0x10,0x89,0xc1,0xbf};
   9                         //  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 , 灭 , 0. , 1. , 2. , 3. , 4. , 5. , 6. ,
             - 7. , 8. , 9. ,  H ,  U ,  -  ; 
  10                         //  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 ,
             - 18 , 19 , 20 , 21 , 22 , 23  ;
  11          u8 dspcom = 0,i;
  12          bit key_flag = 0,iic_flag1 = 0,iic_flag2 = 0;
  13          
  14          
  15          void Timer0Init(void)   //2毫秒@12.000MHz
  16          {
  17   1        AUXR |= 0x80;   //定时器时钟1T模式
  18   1        TMOD &= 0xF0;   //设置定时器模式
  19   1        TL0 = 0x40;   //设置定时初值
  20   1        TH0 = 0xA2;   //设置定时初值
  21   1        TF0 = 0;    //清除TF0标志
  22   1        TR0 = 1;    //定时器0开始计时
  23   1        
  24   1        ET0 = 1;    //开定时中断
  25   1        EA= 1;      //开总中断
  26   1      }
  27          
  28          void Uart_init(void)    //9600bps@12.000MHz
  29          {
  30   1        SCON = 0x50;    //8位数据,可变波特率
  31   1        AUXR |= 0x40;   //定时器1时钟为Fosc,即1T
  32   1        AUXR &= 0xFE;   //串口1选择定时器1为波特率发生器
  33   1        TMOD &= 0x0F;   //设定定时器1为16位自动重装方式
  34   1        TL1 = 0xC7;   //设定定时初值
  35   1        TH1 = 0xFE;   //设定定时初值
  36   1        ET1 = 0;    //禁止定时器1中断
  37   1        TR1 = 1;    //启动定时器1
  38   1        EA = 1;
  39   1        ES = 1;
  40   1      }
  41          
  42          
  43          void door(u8 choose,u8 input)    //573锁存器封装成函数
  44          {
  45   1        P2 = (P2 & 0x1f) | choose;
  46   1        P0 = input;
  47   1        P2 &= 0x1f; 
  48   1      }
  49          
  50          void clo_num()        //关数码管
  51          {
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 21:21:27 PAGE 2   

  52   1        dspbuf[0] = 10;
  53   1        dspbuf[1] = 10;
  54   1        dspbuf[2] = 10;
  55   1        dspbuf[3] = 10;
  56   1        dspbuf[4] = 10;
  57   1        dspbuf[5] = 10;
  58   1        dspbuf[6] = 10;
  59   1        dspbuf[7] = 10;
  60   1      }
  61          
  62          void all_init()      //关灯、蜂鸣器、数码管
  63          {
  64   1        door(0x80,0xff);
  65   1        door(0xa0,0xaf);
  66   1        clo_num();
  67   1      }
  68          
  69          void display()    //数码管显示函数
  70          {       
  71   1        door(0xe0,0xff);    //消隐
  72   1      
  73   1        door(0xc0,0x01<<dspcom);
  74   1        door(0xe0,tab[dspbuf[dspcom++]]);
  75   1        
  76   1        if(dspcom >= 8)     //or dspcom &= 0x07;
  77   1          dspcom = 0;
  78   1      }
  79          
  80          u8 keypress = 0,keyvalue = 0xff,keyread = 0;
  81          u8 Read_key(void)                                   //矩阵键盘，接KBD
  82          {
  83   1          u8 key_m,cal;
  84   1          
  85   1          P3 = 0xf0;P42=1;P44=1;
  86   1          P36=P42;P37=P44;         //变量替换
  87   1          key_m = (P3 & 0xf0);
  88   1      
  89   1          if(key_m != 0xf0) 
  90   1              keypress++;
  91   1         else
  92   1              keypress = 0; 
  93   1          
  94   1          if(keypress == 3)
  95   1          {
  96   2            keypress = 0;
  97   2            keyread = 1;
  98   2            switch(key_m)
  99   2              {
 100   3                  case 0x70:cal = 0;break;                
 101   3                  case 0xb0:cal = 1;break;    
 102   3                  case 0xd0:cal = 2;break;    
 103   3                  case 0xe0:cal = 3;break;
 104   3              }
 105   2              
 106   2              P3 = 0x0f;P42=0;P44=0;
 107   2              P36=P42;P37=P44;         //变量替换
 108   2              key_m = (P3 & 0x0f);
 109   2              
 110   2            switch(key_m)
 111   2                {
 112   3                    case 0x0e:keyvalue = (4*cal+7);break;                
 113   3                    case 0x0d:keyvalue = (4*cal+6);break;    
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 21:21:27 PAGE 3   

 114   3                    case 0x0b:keyvalue = (4*cal+5);break;    
 115   3                    case 0x07:keyvalue = (4*cal+4);break;
 116   3                }
 117   2          }
 118   1      
 119   1          P3 = 0x0f;P42=0;P44=0;
 120   1          P36=P42;P37=P44;                      //变量替换
 121   1          key_m = (P3&0x0f);
 122   1        
 123   1          if((keyread == 1) && (key_m == 0x0f))
 124   1          {
 125   2              keyread = 0;
 126   2              return keyvalue;  
 127   2          }
 128   1          
 129   1          return 0xff;  
 130   1      }
 131          
 132          void main()   //```````````````````````````````````````````````````````````````````主函数
 133          {
 134   1        u8 key_re,iic_w = 0,vol = 0;
 135   1        int date_1,date_2;
 136   1        
 137   1        all_init();
 138   1        Uart_init();
 139   1        Timer0Init();
 140   1        
 141   1        
 142   1        PCF8591_DAC(200);
 143   1        
 144   1        while(1)
 145   1        {
 146   2          if(key_flag)      
 147   2          {
 148   3            key_flag = 0;
 149   3            key_re = Read_key();
 150   3            
 151   3            if(key_re != 0xff)
 152   3            {
 153   4              switch(key_re)
 154   4              {
 155   5                case 7:door(0x80,0x00);break; 
 156   5                case 6:door(0x80,0xff);break;
 157   5                case 5:door(0x80,0xaa);break;
 158   5                case 4:door(0x80,0x55);break;
 159   5                case 10:door(0xa0,0xaf);break;
 160   5                case 11:door(0xa0,0xef);break;
 161   5                case 9:;break;
 162   5                case 8:;break;
 163   5                case 15:door(0xa0,0xbf);break;
 164   5                case 14:door(0xa0,0xaf);break;
 165   5                case 13:door(0x80,0xfe);break;
 166   5                case 12:door(0x80,0xfd);break;
 167   5                case 19:door(0x80,0xfb);break;  
 168   5                case 18:vol +=10;break;
 169   5                case 17:iic_w = 1;;break;
 170   5                case 16:iic_w = 0;
 171   5                        clo_num();break;
 172   5                default:break;
 173   5              }
 174   4            }
 175   3          }
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 21:21:27 PAGE 4   

 176   2          
 177   2            if((iic_flag1) && (iic_w))
 178   2            {
 179   3      //        PCF8591_DAC(i);
 180   3      //        PCF8591_DAC(200);
 181   3              iic_flag1 = 0;
 182   3              date_1 = PCF8591_ADC(0);   //测Rb2电压
 183   3              date_1 = 5*date_1/255.0*100;
 184   3      
 185   3              dspbuf[0] = date_1/100+11;
 186   3              dspbuf[1] = date_1%100/10;
 187   3              dspbuf[2] = date_1%10; 
 188   3            }
 189   2            
 190   2            if((iic_flag2) && (iic_w))
 191   2            {
 192   3              iic_flag2 = 0;
 193   3              date_2 = PCF8591_ADC(3);     //用A/D引脚测电压
 194   3              date_2 = 5*date_2/255.0*100;
 195   3              
 196   3              dspbuf[5] = date_2/100+11;
 197   3              dspbuf[6] = date_2%100/10;
 198   3              dspbuf[7] = date_2%10;
 199   3            }
 200   2        }
 201   1      }
 202          
 203          
 204          void timer0() interrupt 1   //````````````````定时器0中断
 205          {
 206   1        static u8  t_20ms = 0,t_100ms = 0;   //MAX = 500 ms
 207   1      
 208   1        //不需要重载装载值
 209   1        
 210   1        display();    //数码管显示函数放里面
 211   1      
 212   1        t_20ms++;
 213   1        t_100ms++;
 214   1      
 215   1        if(t_20ms >= 10)  //每20ms扫描一次按键
 216   1        {
 217   2          t_20ms = 0;
 218   2          key_flag = 1;
 219   2        }
 220   1        
 221   1        if(t_100ms == 100)      
 222   1        {
 223   2          iic_flag1 = 1;
 224   2        }
 225   1        if(t_100ms == 200)
 226   1        {
 227   2          t_100ms = 0;
 228   2          iic_flag2 = 1;
 229   2        }
 230   1      }
 231          
 232          void Uart() interrupt 4
 233          {
 234   1      //  u8 i;
 235   1        
 236   1        if(RI)
 237   1        {
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 21:21:27 PAGE 5   

 238   2          RI = 0;
 239   2          i = SBUF;
 240   2      //    PCF8591_DAC(i);
 241   2          SBUF = i;
 242   2          while(!TI);
 243   2          TI = 0;
 244   2        }
 245   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    862    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       4
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
