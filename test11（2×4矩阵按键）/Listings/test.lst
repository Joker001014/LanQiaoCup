C51 COMPILER V9.56.0.0   TEST                                                              06/16/2022 19:36:09 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TEST
OBJECT MODULE PLACED IN .\Objects\test.obj
COMPILER INVOKED BY: D:\Keil 5\c51\keil(相关软件)\C51\BIN\C51.EXE test.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\test.lst) TABS(2) OBJECT(.\Objects\test.obj)

line level    source

   1          #include "STC15F2K60S2.h"
   2          
   3          #define u8 unsigned char
   4          #define u16 unsigned int
   5          
   6          u8 dspbuf[8] = {10,10,10,10,10,10,10,10};  
   7          u8 code tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0x40,0x79,0x24,0x30,0x19,0x12,0x02
             -,0x78,0x00,0x10};
   8                         // 0     1    2    3    4    5    6    7    8    9    10  11   12   13   14   15   16  17   
             -18   19   20       
   9          u8 dspcom = 0;
  10          bit key_flag = 0;
  11            
  12          void door(u8 choose,input)
  13          {
  14   1        P2 = (P2 & 0x1f) | choose;
  15   1        P0 = input;
  16   1        P2 &= 0x1f; 
  17   1      }
  18          
  19          void num_close()
  20          {
  21   1        dspbuf[0] = 10;
  22   1        dspbuf[1] = 10;
  23   1        dspbuf[2] = 10;
  24   1        dspbuf[3] = 10;
  25   1        dspbuf[4] = 10;
  26   1        dspbuf[5] = 10;
  27   1        dspbuf[6] = 10;
  28   1        dspbuf[7] = 10;
  29   1      }
  30          
  31          void all_init()
  32          {
  33   1        door(0x80,0xff);
  34   1        door(0xa0,0xaf);
  35   1        num_close();
  36   1      }
  37          
  38          void Timer0Init(void)   //2毫秒@12.000MHz
  39          {
  40   1        AUXR |= 0x80;   //定时器时钟1T模式
  41   1        TMOD &= 0xF0;   //设置定时器模式
  42   1        TL0 = 0x40;   //设置定时初值
  43   1        TH0 = 0xA2;   //设置定时初值
  44   1        TF0 = 0;    //清除TF0标志
  45   1        TR0 = 1;    //定时器0开始计时
  46   1        
  47   1        ET0 = 1;
  48   1        EA = 1;
  49   1      }
  50          
  51          void display()
  52          {       
C51 COMPILER V9.56.0.0   TEST                                                              06/16/2022 19:36:09 PAGE 2   

  53   1        door(0xe0,0xff);
  54   1      
  55   1        door(0xc0,0x01<<dspcom);
  56   1        door(0xe0,tab[dspbuf[dspcom++]]);
  57   1        
  58   1        if(dspcom >= 8)
  59   1          dspcom = 0;
  60   1      }
  61          
  62          //2*4矩阵键盘
  63          u8 keypress = 0,keyvalue = 0xff,keyread = 0;
  64          u8 Read_key()
  65          {
  66   1          u8 key_m,cal;
  67   1          
  68   1          P32 = 0;P33 = 0;P34 = 1;P35 = 1;P42 = 1;P44 = 1;
  69   1          P36 = P42;P37 = P44;
  70   1          key_m = P3&0xf0;
  71   1      
  72   1          if(key_m != 0xf0) 
  73   1              keypress++;
  74   1          else
  75   1              keypress = 0; 
  76   1          
  77   1          if(keypress == 3)
  78   1          {
  79   2            keypress = 0;
  80   2            keyread = 1;
  81   2            switch(key_m)
  82   2            {
  83   3                case 0x70:cal = 0;break;                
  84   3                case 0xb0:cal = 1;break;    
  85   3                case 0xd0:cal = 2;break;    
  86   3                case 0xe0:cal = 3;break;
  87   3            }
  88   2              
  89   2              P32 = 1;P33 = 1;P34 = 0;P35 = 0;P42 = 0;P44 = 0;
  90   2              key_m = P3&0x0c;
  91   2              
  92   2            switch(key_m)
  93   2            {
  94   3                case 0x08:keyvalue = (4*cal+5);break;    
  95   3                case 0x04:keyvalue = (4*cal+4);break;
  96   3            }
  97   2          }
  98   1      
  99   1          P32 = 1;P33 = 1;P34 = 0;P35 = 0;P42 = 0;P44 = 0;
 100   1          key_m = P3&0x0c;
 101   1        
 102   1          if((keyread) && (key_m == 0x0c))
 103   1          {
 104   2              keyread = 0;
 105   2              return keyvalue;  
 106   2          }
 107   1          return 0xff;  
 108   1      }
 109          //2*2矩阵键盘
 110          //u8 Read_key()
 111          //{
 112          //    u8 key_m,cal;
 113          //    
 114          //    P42 = 1;P44 = 1;P33 = 0;P32 = 0;
C51 COMPILER V9.56.0.0   TEST                                                              06/16/2022 19:36:09 PAGE 3   

 115          //    P36 = P42;P37 = P44;
 116          //    key_m = P3&0xc0;
 117          
 118          //    if(key_m != 0xc0) 
 119          //        keypress++;
 120          //   else
 121          //        keypress = 0; 
 122          //    
 123          //    if(keypress == 3)
 124          //    {
 125          //      keypress = 0;
 126          //      keyread = 1;
 127          //      switch(key_m)
 128          //      {
 129          //          case 0x40:cal = 0;break;                
 130          //          case 0x80:cal = 1;break;    
 131          //      }
 132          //        
 133          //      P42 = 0;P44 = 0;P33 = 1;P32 = 1;
 134          //      key_m = P3&0x0c;
 135          //        
 136          //      switch(key_m)
 137          //      {
 138          //          case 0x08:keyvalue = (4*cal+5);break;    
 139          //          case 0x04:keyvalue = (4*cal+4);break;
 140          //      }
 141          //    }
 142          
 143          //    P42 = 0;P44 = 0;P33 = 1;P32 = 1;
 144          //    key_m = P3&0x0c;
 145          
 146          //    if((keyread) && (key_m == 0x0c))
 147          //    {
 148          //        keyread = 0;
 149          //        return keyvalue;  
 150          //    }
 151          //    return 0xff;  
 152          //}
 153          //////////////////////////////////////////////////////////////////////////////////////////////////////////
             -///////////////
 154          //////////////////////////////////////////////////////////////////////////////////////////////////////////
             -///////////////
 155          //////////////////////////////////////////////////////////////////////////////////////////////////////////
             -///////////////
 156          void main()
 157          { 
 158   1        u8 key_re;
 159   1        
 160   1        Timer0Init();
 161   1        all_init();
 162   1      
 163   1        while(1)
 164   1        {
 165   2          if(key_flag)      
 166   2          {
 167   3            key_flag = 0;
 168   3            key_re = Read_key();
 169   3            
 170   3            if(key_re != 0xff)
 171   3            {
 172   4              switch(key_re)
 173   4              {
C51 COMPILER V9.56.0.0   TEST                                                              06/16/2022 19:36:09 PAGE 4   

 174   5                case 7:door(0x80,0xff);break;
 175   5                case 6:door(0x80,0x00);break;
 176   5                case 5:door(0x80,0xaa);break;
 177   5                case 4:door(0x80,0x55);break;
 178   5                
 179   5                case 11:dspbuf[3] = 0;break;
 180   5                case 10:dspbuf[2] = 0;break;
 181   5                case 9:dspbuf[1] = 0;break;
 182   5                case 8:dspbuf[0] = 0;break;
 183   5                
 184   5                case 15:dspbuf[7] = 0;break;
 185   5                case 14:dspbuf[6] = 0;break;
 186   5                case 13:dspbuf[5] = 0;break;
 187   5                case 12:dspbuf[4] = 0;break;
 188   5                
 189   5                case 19:dspbuf[6] = 10;dspbuf[7] = 10;break;
 190   5                case 18:dspbuf[4] = 10;dspbuf[5] = 10;break;
 191   5                case 17:dspbuf[2] = 10;dspbuf[3] = 10;break;
 192   5                case 16:dspbuf[0] = 10;dspbuf[1] = 10;break;
 193   5              }
 194   4            }
 195   3          }
 196   2        }
 197   1      }
 198          //////////////////////////////////////////////////////////////////////////////////////////////////////////
             -///////////////
 199          //////////////////////////////////////////////////////////////////////////////////////////////////////////
             -///////////////
 200          //////////////////////////////////////////////////////////////////////////////////////////////////////////
             -///////////////
 201          void timer0() interrupt 1
 202          {
 203   1        static u8  t_20ms = 0;
 204   1        
 205   1        display();
 206   1      
 207   1        t_20ms++;
 208   1      
 209   1        if(t_20ms >= 10)
 210   1        {
 211   2          t_20ms = 0;
 212   2          key_flag = 1;
 213   2        }
 214   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    554    ----
   CONSTANT SIZE    =     21    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     13       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
