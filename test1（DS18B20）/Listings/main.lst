C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 20:23:09 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil 5\c51\keil(相关软件)\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC15F2K60S2.h"
   2          #include "onewire.h"
   3          #include "stdio.h"
   4          
   5          #define u8 unsigned char
   6          #define u16 unsigned int
   7          
   8          u8 dspbuf[8] = {10,10,10,10,10,10,10,10};  
   9          u8 code tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0x40,0x79,0x24,0x30,0x19,0x12,0x02
             -,0x78,0x00,0x10,0x89,0xc1,0xbf};
  10          u8 dspcom = 0;
  11          bit key_flag = 0,temp_flag = 0,flag = 0,flag1 = 0,temp_w = 0;
  12          
  13          
  14          void Timer0Init(void)   //2毫秒@12.000MHz
  15          {
  16   1        AUXR |= 0x80;   //定时器时钟1T模式
  17   1        TMOD &= 0xF0;   //设置定时器模式
  18   1        TL0 = 0x40;   //设置定时初值
  19   1        TH0 = 0xA2;   //设置定时初值
  20   1        TF0 = 0;    //清除TF0标志
  21   1        TR0 = 1;    //定时器0开始计时
  22   1        
  23   1        ET0 = 1;    //开定时中断
  24   1        EA= 1;      //开总中断
  25   1      }
  26          
  27          //void delay(float rate)  //延时函数：0.5s-0.5;1s-1;2s-2...
  28          //{
  29          //  u8 num;
  30          //  while(1)
  31          //  {
  32          //    if(key_flag)
  33          //    {
  34          //      num++;
  35          //      key_flag = 0;
  36          //    }
  37          //    if(num == 50*rate)
  38          //    {
  39          //      num = 0;
  40          //      break;
  41          //    }
  42          //  }
  43          //}
  44          
  45          void door(u8 choose,u8 input)    //573锁存器封装成函数
  46          {
  47   1        P2 = (P2 & 0x1f) | choose;
  48   1        P0 = input;
  49   1        P2 &= 0x1f; 
  50   1      }
  51          
  52          void clo_num()
  53          {
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 20:23:09 PAGE 2   

  54   1        dspbuf[0] = 10;
  55   1        dspbuf[1] = 10;
  56   1        dspbuf[2] = 10;
  57   1        dspbuf[3] = 10;
  58   1        dspbuf[4] = 10;
  59   1        dspbuf[5] = 10;
  60   1        dspbuf[6] = 10;
  61   1        dspbuf[7] = 10;
  62   1      }
  63          
  64          void all_init()      //关灯、蜂鸣器、数码管
  65          {
  66   1        door(0x80,0xff);
  67   1        door(0xa0,0xaf);
  68   1        clo_num();
  69   1      }
  70          
  71          void display()    //数码管显示函数
  72          {       
  73   1        door(0xe0,0xff);    //消隐
  74   1      
  75   1        door(0xc0,0x01<<dspcom);
  76   1        door(0xe0,tab[dspbuf[dspcom++]]);
  77   1        
  78   1        if(dspcom >= 8)
  79   1          dspcom = 0;
  80   1      }
  81          
  82          //u8 Read_key()               //独立按键，接BTN
  83          //{
  84          //  u8 key_m;
  85          //  P3 = 0x0f;
  86          //  key_m = (P3 & 0x0f);
  87          //  
  88          //  if(key_m != 0x0f)
  89          //    keypress++;
  90          //  else
  91          //    keypress = 0;
  92          //  
  93          //  if(keypress == 3)
  94          //  {
  95          //    keypress = 0;
  96          //    keyread = 1;
  97          //    switch(key_m)
  98          //    {
  99          //      case 0x0e:keyvalue = 7;break;
 100          //      case 0x0d:keyvalue = 6;break;
 101          //      case 0x0b:keyvalue = 5;break;
 102          //      case 0x07:keyvalue = 4;break;
 103          //    }
 104          //  }
 105          //  
 106          //    P3 = 0x0f;
 107          //    key_m = (P3 & 0x0f);
 108          //    
 109          //    if((keyread==1) && (key_m==0x0f))
 110          //    {
 111          //      keyread = 0;
 112          //      return keyvalue;
 113          //    }
 114          //  return 0xff;
 115          //}
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 20:23:09 PAGE 3   

 116          
 117          u8 keypress = 0,keyvalue = 0xff,keyread = 0;
 118          u8 Read_key(void)                                   //矩阵键盘，接KBD
 119          {
 120   1          u8 key_m,cal;
 121   1          
 122   1          P3 = 0xf0;P42=1;P44=1;
 123   1          P36=P42;P37=P44;         //变量替换
 124   1          key_m = (P3 & 0xf0);
 125   1      
 126   1          if(key_m != 0xf0) 
 127   1              keypress++;
 128   1         else
 129   1              keypress = 0; 
 130   1          
 131   1          if(keypress == 3)
 132   1          {
 133   2            keypress = 0;
 134   2            keyread = 1;
 135   2            switch(key_m)
 136   2              {
 137   3                  case 0x70:cal = 0;break;                
 138   3                  case 0xb0:cal = 1;break;    
 139   3                  case 0xd0:cal = 2;break;    
 140   3                  case 0xe0:cal = 3;break;
 141   3              }
 142   2              
 143   2              P3 = 0x0f;P42=0;P44=0;
 144   2              P36=P42;P37=P44;         //变量替换
 145   2              key_m = (P3 & 0x0f);
 146   2              
 147   2            switch(key_m)
 148   2                {
 149   3                    case 0x0e:keyvalue = (4*cal+7);return keyvalue; break;                
 150   3                    case 0x0d:keyvalue = (4*cal+6);return keyvalue; break;    
 151   3                    case 0x0b:keyvalue = (4*cal+5);return keyvalue; break;    
 152   3                    case 0x07:keyvalue = (4*cal+4);return keyvalue; break;
 153   3                }
 154   2          }
 155   1      
 156   1          P3 = 0x0f;P42=0;P44=0;
 157   1          P36=P42;P37=P44;                      //变量替换
 158   1          key_m = (P3&0x0f);
 159   1        
 160   1          if((keyread == 1) && (key_m == 0x0f))    //松手不检测
 161   1          {
 162   2              keyread = 0;
 163   2      //        return keyvalue;  
 164   2              temp_w = 0;
 165   2          }
 166   1          
 167   1          return 0xff;  
 168   1      }
 169          
 170          void datachange(long int temp)
 171          {
 172   1        temp = temp*0.0625*10000;
 173   1      
 174   1        dspbuf[1] = temp/1000000;
 175   1        dspbuf[2] = temp%1000000/100000;
 176   1        dspbuf[3] = temp%100000/10000+11;
 177   1        dspbuf[4] = temp%10000/1000;
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 20:23:09 PAGE 4   

 178   1        dspbuf[5] = temp%1000/100;
 179   1        dspbuf[6] = temp%100/10;
 180   1        dspbuf[7] = temp%10;
 181   1      }
 182          
 183          void main()   //```````````````````````````````````````````````````````````````````主函数
 184          { 
 185   1        u8 key_re,num = 10;
 186   1      //  u8 i;
 187   1      //  u8 w = 0xff;
 188   1        
 189   1        Timer0Init();
 190   1        all_init();
 191   1        
 192   1      //  for(i=0;i<=8;i++)   //流水灯
 193   1      //  {
 194   1      //    door(0x80,~(0x01<<i));
 195   1      //    delay(0.2);
 196   1      //  }
 197   1      //  delay(1);
 198   1      //  for(i=0;i<10;i++)
 199   1      //  {
 200   1      //    w = ~w;
 201   1      //    door(0x80,~(0x01&w));
 202   1      //    delay(1);
 203   1      //  }
 204   1      
 205   1        while(1)
 206   1        {
 207   2          if((temp_flag) && (temp_w))
 208   2            {
 209   3              temp_flag = 0;
 210   3              datachange(rd_temperature());
 211   3            }
 212   2            
 213   2          if(!temp_w)
 214   2            clo_num();
 215   2      
 216   2      
 217   2          if(key_flag)      
 218   2          {
 219   3            key_flag = 0;
 220   3            key_re = Read_key();
 221   3            
 222   3            if(key_re != 0xff)
 223   3            {
 224   4              switch(key_re)
 225   4              {
 226   5                case 7:door(0x80,0x00);break; //在这里放按键要执行的功能
 227   5                case 6:door(0x80,0xff);break;
 228   5                case 5:door(0x80,0xaa);break;
 229   5                case 4:door(0x80,0x55);break;
 230   5                case 11:door(0x80,0x0f);break;
 231   5                case 10:door(0x80,0xf0);break;
 232   5                case 9:door(0x80,0x0f);break;
 233   5                case 8:door(0x80,0xf0);break;
 234   5                case 15: break;
 235   5                case 14:door(0xa0,0xaf);break;
 236   5                case 13:temp_w = 1;break;
 237   5                case 12:temp_w = 0;
 238   5                        clo_num();break;
 239   5                case 19:door(0x80,0xfb);break;  //在这里放按键要执行的功能
C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 20:23:09 PAGE 5   

 240   5                case 18:door(0x80,0xf7);break;
 241   5                case 17:door(0x80,0xef);break;
 242   5                case 16:door(0x80,0xdf);break;
 243   5                default:break;
 244   5              }
 245   4            }
 246   3          }
 247   2        }
 248   1      }
 249          
 250          
 251          void timer0() interrupt 1   //````````````````定时器0中断
 252          {
 253   1        static u8  t_20ms = 0,t_500ms = 0,t_50ms = 0;
 254   1        //不需要重载装载值
 255   1        
 256   1        display();    //数码管显示函数放里面
 257   1      
 258   1        t_20ms++;
 259   1        t_500ms++;        
 260   1        t_50ms++;
 261   1      
 262   1        if(t_20ms >= 10)  //每20ms扫描一次按键
 263   1        {
 264   2          t_20ms = 0;
 265   2          key_flag = 1;
 266   2        }
 267   1      
 268   1        if(t_500ms >= 250)
 269   1        {
 270   2          t_500ms = 0;
 271   2          flag = 1;
 272   2        }
 273   1        
 274   1        if(t_50ms >= 25)
 275   1        {
 276   2          t_50ms = 0;
 277   2          temp_flag = 1;
 278   2        }
 279   1      }
 280          
 281          //void timer1() interrupt 3   //````````````````定时器1中断
 282          //{
 283          //  static u8 t1_500ms = 0;
 284          //  
 285          //  t1_500ms++;
 286          //  
 287          //  if(t1_500ms >= 250)
 288          //  {
 289          //    t1_500ms = 0;
 290          //    flag1 = 1;
 291          //  }
 292          //  
 293          //  
 294          //}
 295          
 296          
 297          
 298          
 299          
 300          

C51 COMPILER V9.56.0.0   MAIN                                                              04/08/2022 20:23:09 PAGE 6   


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    871    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      5    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
