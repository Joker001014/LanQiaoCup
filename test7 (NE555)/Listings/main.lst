C51 COMPILER V9.56.0.0   MAIN                                                              06/15/2022 17:04:08 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil 5\c51\keil(相关软件)\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC15F2K60S2.h"
   2          
   3          #define u8 unsigned char
   4          #define u16 unsigned int
   5          
   6          u8 dspbuf[8] = {10,10,10,10,10,10,10,10};  
   7          u8 code tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff};
   8              
   9          u8 dspcom = 0;
  10          bit key_flag = 0,NE555_flag = 0;
  11            
  12          void door(u8 choose,input)
  13          {
  14   1        P2 = (P2 & 0x1f) | choose;
  15   1        P0 = input;
  16   1        P2 &= 0x1f; 
  17   1      }
  18          
  19          void clo_num()
  20          {
  21   1        dspbuf[0] = 10;
  22   1        dspbuf[1] = 10;
  23   1        dspbuf[2] = 10;
  24   1        dspbuf[3] = 10;
  25   1        dspbuf[4] = 10;
  26   1        dspbuf[5] = 10;
  27   1        dspbuf[6] = 10;
  28   1        dspbuf[7] = 10;
  29   1      }
  30          
  31          void all_init()
  32          {
  33   1        door(0x80,0xff);
  34   1        door(0xa0,0xaf);
  35   1        clo_num();
  36   1      }
  37          
  38          void display()
  39          {       
  40   1        door(0xe0,0xff);
  41   1      
  42   1        door(0xc0,0x01<<dspcom);
  43   1        door(0xe0,tab[dspbuf[dspcom++]]);
  44   1        
  45   1        if(dspcom >= 8)
  46   1          dspcom = 0;
  47   1      }
  48          
  49          u8 keypress = 0,keyvalue = 0xff,keyread = 0;
  50          u8 Read_key()
  51          {
  52   1          u8 key_m,cal;
  53   1          
  54   1          P3 = 0xf0;P42 = 1;P44 = 1;
C51 COMPILER V9.56.0.0   MAIN                                                              06/15/2022 17:04:08 PAGE 2   

  55   1          P36 = P42;P37 = P44;
  56   1          key_m = P3&0xf0;
  57   1      
  58   1          if(key_m != 0xf0) 
  59   1              keypress++;
  60   1         else
  61   1              keypress = 0; 
  62   1          
  63   1          if(keypress == 3)
  64   1          {
  65   2            keypress = 0;
  66   2            keyread = 1;
  67   2            switch(key_m)
  68   2              {
  69   3                  case 0x70:cal = 0;break;                
  70   3                  case 0xb0:cal = 1;break;    
  71   3                  case 0xd0:cal = 2;break;    
  72   3                  case 0xe0:cal = 3;break;
  73   3              }
  74   2              
  75   2              P3 = 0x0f;P42 = 0;P44 = 0;
  76   2              key_m = P3&0x0f;
  77   2              
  78   2            switch(key_m)
  79   2                {
  80   3                    case 0x0e:keyvalue = (4*cal+7);break;                
  81   3                    case 0x0d:keyvalue = (4*cal+6);break;    
  82   3                    case 0x0b:keyvalue = (4*cal+5);break;    
  83   3                    case 0x07:keyvalue = (4*cal+4);break;
  84   3                }
  85   2          }
  86   1      
  87   1          P3 = 0x0f;P42 = 0;P44 = 0;
  88   1          key_m = P3&0x0f;
  89   1        
  90   1          if((keyread) && (key_m == 0x0f))
  91   1          {
  92   2              keyread = 0;
  93   2              return keyvalue;  
  94   2          }
  95   1          return 0xff; 
  96   1      }
  97          
  98          void Timer_Init(void)   //2毫秒@12.000MHz
  99          {
 100   1        AUXR |= 0x40;   //定时器时钟1T模式
 101   1        //△注意：需要用 |=
 102   1        TMOD |= 0x05;   //定时器T1(00：自动重装载)  计数器T0(01：16位不重装，TL0、TH0全用)    0000 0101(第3、6位，
             -0：定时，1：计数)
 103   1        TL1 = 0x40;   //设置定时初值
 104   1        TH1 = 0xA2;   //设置定时初值
 105   1        TF1 = 0;    //清除TF1标志
 106   1        TR1 = 1;    //定时器1开始计时
 107   1        
 108   1        TR0 = 1;        //开计数器0
 109   1        ET0 = 1;
 110   1        ET1 = 1;
 111   1        EA = 1;         //打开总中断        
 112   1      }
 113          
 114          ///////////////////////也可拆成两个函数/////////////////////
 115          //void Timer0Init(void)    //计数器
C51 COMPILER V9.56.0.0   MAIN                                                              06/15/2022 17:04:08 PAGE 3   

 116          //{
 117          //    AUXR |= 0x80;
 118          //    TMOD |= 0x05;    
 119          //    TL0 = 0x00;        //设置计数初值
 120          //    TH0 = 0x00;        //设置计数初值
 121          //    TF0 = 0;
 122          //    TR0 = 0;
 123          //    ET0 = 0;
 124          //}
 125          //void Timer1Init(void)        //2毫秒@12.000MHz
 126          //{
 127          //    AUXR |= 0x40;        //定时器时钟1T模式
 128          //    TMOD &= 0x0F;        //设置定时器模式
 129          //    TL1 = 0x40;        //设置定时初值
 130          //    TH1 = 0xA2;        //设置定时初值
 131          //    TF1 = 0;        //清除TF1标志
 132          //    TR1 = 1;        //定时器1开始计时
 133          //  
 134          //    ET1 = 1;
 135          //    EA  = 1;
 136          //}
 137          ///////////////////////也可拆成两个函数/////////////////////
 138          
 139          //////////////////////当定时器1用于串口时，可用定时器2定时/////////////////////
 140          //void Timer5Init(void)   //2毫秒@12.000MHz
 141          //{
 142          //  AUXR |= 0x04;   //定时器时钟1T模式
 143          //  T2L = 0x40;   //设置定时初值
 144          //  T2H = 0xA2;   //设置定时初值
 145          //  AUXR |= 0x10;   //定时器2开始计时
 146          
 147          //  IE2 |= 0x04;   //△
 148          //  EA = 1;
 149          //}
 150          
 151          
 152          //短接signal和P34，改变Rb3可改变频率
 153          void main()          //***********************************************************************************
             -*****************
 154          {
 155   1        u8 key_re,NE555_w = 0;
 156   1        u16 freq = 0;        //定义频率
 157   1        
 158   1        all_init();
 159   1        Timer_Init();
 160   1      //  Timer0Init();
 161   1      //  Timer1Init();
 162   1      //  Timer5Init();
 163   1        
 164   1        while(1)
 165   1        {
 166   2          if(key_flag)
 167   2          {
 168   3            key_flag = 0;
 169   3            key_re = Read_key();
 170   3            
 171   3            if(key_re != 0xff)
 172   3            {
 173   4              switch(key_re)
 174   4              {
 175   5                case 7:NE555_w ^= 1;break;   //用不了num_close()
 176   5                case 6:;break;
C51 COMPILER V9.56.0.0   MAIN                                                              06/15/2022 17:04:08 PAGE 4   

 177   5                case 5:;break;
 178   5                case 4:door(0x80,0x55);break;
 179   5              }
 180   4            }
 181   3          }
 182   2          
 183   2          if(NE555_flag)
 184   2          {
 185   3            NE555_flag = 0;
 186   3            TR0 = 0;      //关计数器0
 187   3      //      TR1 = 0;      //关定时器1
 188   3            
 189   3            freq = TL0+TH0*256;
 190   3            
 191   3            TH0 = 0;      //清空计数
 192   3            TL0 = 0;      //清空计数
 193   3            
 194   3            TR0 = 1;      //打开计数器0
 195   3      //      TR1 = 1;      //打开计数器1
 196   3          }
 197   2          
 198   2          if((key_flag) && (NE555_w))
 199   2          {
 200   3            key_flag = 0;
 201   3            
 202   3            dspbuf[0] = freq/10000;
 203   3            dspbuf[1] = freq%10000/1000;
 204   3            dspbuf[2] = freq%1000/100;
 205   3            dspbuf[3] = freq%100/10;
 206   3            dspbuf[4] = freq%10;
 207   3          }
 208   2        }
 209   1      }
 210          
 211          void timer1() interrupt 3
 212          {
 213   1        static u8 t_20ms = 0;
 214   1        static u16 t_1000ms = 0;
 215   1      
 216   1        display();
 217   1        
 218   1        t_20ms++;
 219   1        t_1000ms++;
 220   1        
 221   1        if(t_20ms >= 10)
 222   1        {
 223   2          t_20ms = 0;
 224   2          key_flag = 1;
 225   2        }
 226   1        
 227   1        if(t_1000ms >= 500)
 228   1        {
 229   2          t_1000ms = 0;
 230   2          NE555_flag = 1;
 231   2        }
 232   1      }
 233          
 234          //void timer2() interrupt 12
 235          //{
 236          //  static u8 t_20ms = 0;
 237          //  static u16 t_1000ms = 0;
 238          
C51 COMPILER V9.56.0.0   MAIN                                                              06/15/2022 17:04:08 PAGE 5   

 239          //  display();
 240          //  
 241          //  t_20ms++;
 242          //  t_1000ms++;
 243          //  
 244          //  if(t_20ms >= 10)
 245          //  {
 246          //    t_20ms = 0;
 247          //    key_flag = 1;
 248          //  }
 249          //  
 250          //  if(t_1000ms >= 500)
 251          //  {
 252          //    t_1000ms = 0;
 253          //    NE555_flag = 1;
 254          //  }
 255          //}
 256          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    601    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15       3
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
