C51 COMPILER V9.56.0.0   MAIN                                                              06/17/2022 10:46:34 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil 5\c51\keil(相关软件)\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRI
                    -NT(.\Listings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include "STC15F2K60S2.h"
   2          #include "iic.h"
   3          
   4          #define u8 unsigned char
   5          #define u16 unsigned int
   6          #define u32 unsigned long int
   7          
   8          
   9          u8 dspbuf[8] = {10,10,10,10,10,10,10,10};
  10          u8 code tab[] = {0xc0,0xf9,0xa4,0xb0,0x99,0x92,0x82,0xf8,0x80,0x90,0xff,0x40,0x79,0x24,0x30,0x19,0x12,0x02
             -,0x78,0x00,0x10,0x89,0xc1,0xbf};
  11                         //  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 , 灭 , 0. , 1. , 2. , 3. , 4. , 5. , 6. ,
             - 7. , 8. , 9. ,  H ,  U ,  -  ; 
  12                         //  0 ,  1 ,  2 ,  3 ,  4 ,  5 ,  6 ,  7 ,  8 ,  9 , 10 , 11 , 12 , 13 , 14 , 15 , 16 , 17 ,
             - 18 , 19 , 20 , 21 , 22 , 23  ;
  13          u8 dspcom = 0;
  14          bit key_flag = 0,EEPROM_flag = 0;
  15          
  16          
  17          void Timer0Init(void)   //2毫秒@12.000MHz
  18          {
  19   1        AUXR |= 0x80;   //定时器时钟1T模式
  20   1        TMOD &= 0xF0;   //设置定时器模式
  21   1        TL0 = 0x40;   //设置定时初值
  22   1        TH0 = 0xA2;   //设置定时初值
  23   1        TF0 = 0;    //清除TF0标志
  24   1        TR0 = 1;    //定时器0开始计时
  25   1        
  26   1        ET0 = 1;    //开定时中断
  27   1        EA= 1;      //开总中断
  28   1      }
  29          
  30          void door(u8 choose,u8 input)    //573锁存器封装成函数
  31          {
  32   1        P2 = (P2 & 0x1f) | choose;
  33   1        P0 = input;
  34   1        P2 &= 0x1f; 
  35   1      }
  36          
  37          void clo_num()        //关数码管
  38          {
  39   1        dspbuf[0] = 10;
  40   1        dspbuf[1] = 10;
  41   1        dspbuf[2] = 10;
  42   1        dspbuf[3] = 10;
  43   1        dspbuf[4] = 10;
  44   1        dspbuf[5] = 10;
  45   1        dspbuf[6] = 10;
  46   1        dspbuf[7] = 10;
  47   1      }
  48          
  49          void all_init()      //关灯、蜂鸣器、数码管
  50          {
  51   1        door(0x80,0xff);
C51 COMPILER V9.56.0.0   MAIN                                                              06/17/2022 10:46:34 PAGE 2   

  52   1        door(0xa0,0xaf);
  53   1        clo_num();
  54   1      }
  55          
  56          void display()    //数码管显示函数
  57          {       
  58   1        door(0xe0,0xff);    //消隐
  59   1      
  60   1        door(0xc0,0x01<<dspcom);
  61   1        door(0xe0,tab[dspbuf[dspcom++]]);
  62   1        
  63   1        if(dspcom >= 8)     //or dspcom &= 0x07;
  64   1          dspcom = 0;
  65   1      }
  66          
  67          u8 keypress = 0,keyvalue = 0xff,keyread = 0;
  68          u8 Read_key(void)                                   //矩阵键盘，接KBD
  69          {
  70   1          u8 key_m,cal;
  71   1          
  72   1          P3 = 0xf0;P42=1;P44=1;
  73   1          P36=P42;P37=P44;         //变量替换
  74   1          key_m = (P3 & 0xf0);
  75   1      
  76   1          if(key_m != 0xf0) 
  77   1              keypress++;
  78   1         else
  79   1              keypress = 0; 
  80   1          
  81   1          if(keypress == 3)
  82   1          {
  83   2            keypress = 0;
  84   2            keyread = 1;
  85   2            switch(key_m)
  86   2              {
  87   3                  case 0x70:cal = 0;break;                
  88   3                  case 0xb0:cal = 1;break;    
  89   3                  case 0xd0:cal = 2;break;    
  90   3                  case 0xe0:cal = 3;break;
  91   3              }
  92   2              
  93   2              P3 = 0x0f;P42=0;P44=0;
  94   2              P36=P42;P37=P44;         //变量替换
  95   2              key_m = (P3 & 0x0f);
  96   2              
  97   2            switch(key_m)
  98   2                {
  99   3                    case 0x0e:keyvalue = (4*cal+7);break;                
 100   3                    case 0x0d:keyvalue = (4*cal+6);break;    
 101   3                    case 0x0b:keyvalue = (4*cal+5);break;    
 102   3                    case 0x07:keyvalue = (4*cal+4);break;
 103   3                }
 104   2          }
 105   1      
 106   1          P3 = 0x0f;P42=0;P44=0;
 107   1          P36=P42;P37=P44;                      //变量替换
 108   1          key_m = (P3&0x0f);
 109   1        
 110   1          if((keyread == 1) && (key_m == 0x0f))
 111   1          {
 112   2              keyread = 0;
 113   2              return keyvalue;  
C51 COMPILER V9.56.0.0   MAIN                                                              06/17/2022 10:46:34 PAGE 3   

 114   2          }
 115   1          
 116   1          return 0xff;  
 117   1      }
 118          
 119          //float第N个字节转换成uint8
 120          u8 Float2Uint8(float num,u8 N)
 121          {
 122   1          u8* temp;
 123   1          temp = (u8 *)&num;
 124   1          return *(temp+N);
 125   1      }
 126          
 127          //float转换为uint32
 128          u32 Float2Uint32(float dat)
 129          {
 130   1          u32 temp = 0;
 131   1          u8 i;
 132   1          for(i=0;i<4;i++)
 133   1              temp |= Float2Uint8(dat,i)<<(i*8);
 134   1          return temp;
 135   1      }
 136          
 137          float Uint82Float(u8* p)
 138          {
 139   1          float temp;
 140   1          *((u8*)&temp) = *p;
 141   1          *((u8*)&temp+1) = *(p+1);
 142   1          *((u8*)&temp+2) = *(p+2);
 143   1          *((u8*)&temp+3) = *(p+3);
 144   1          return temp;
 145   1      }
 146          //uint32转float
 147          float Uint322Float(u32 dat)
 148          {
 149   1          float temp;
 150   1          *((u8*)&temp) = dat&0x00ff;
 151   1          *((u8*)&temp+1) = (dat>>8)&0x00ff;
 152   1          *((u8*)&temp+2) = (dat>>16)&0x00ff;
 153   1          *((u8*)&temp+3) = (dat>>24)&0x00ff;
 154   1      
 155   1          return temp;
 156   1      }
 157          
 158          u8 num = 50;
 159          void main()   //```````````````````````````````````````````````````````````````````主函数
 160          {
 161   1        u8 key_re,date,EEPROM_w = 0;
 162   1        u8 str[8] = {0,1,3,1,4,5,2,0},lens = 4;
 163   1        u8 put[8] = {1,1,1,1,1,1,1,1};
 164   1        float dat = 12.345,dat_show;
 165   1        u8 input[4],ouput[4];
 166   1        u32 temp_test = 0,temp1,show;
 167   1        
 168   1        all_init();
 169   1        Timer0Init();
 170   1        
 171   1        
 172   1        EEPROM_Write(1,str,8);    //地址0不行
 173   1      
 174   1        
 175   1        while(1)
C51 COMPILER V9.56.0.0   MAIN                                                              06/17/2022 10:46:34 PAGE 4   

 176   1        {
 177   2          
 178   2          if(key_flag)      
 179   2          {
 180   3            key_flag = 0;
 181   3            key_re = Read_key();
 182   3            
 183   3            if(key_re != 0xff)
 184   3            {
 185   4              switch(key_re)
 186   4              {
 187   5                case 7:EEPROM_Read(1,put,8);;break; 
 188   5                case 6:door(0x80,0xff);break;
 189   5                case 5:
 190   5                    temp1 = dat*1000;
 191   5                    *(u32 *)input = temp1;
 192   5                    EEPROM_Write(0,input,4);
 193   5                break;
 194   5                case 4:
 195   5      //            *(u32 *)input = (u32 *)&dat;
 196   5      //            temp_test = input[0]*256*256*256+input[1]*256*256+input[2]*256+input[3];
 197   5                  
 198   5      //            temp_test = Float2Uint32(dat);
 199   5      //            dat_show = Uint322Float(temp_test);
 200   5      //            show = dat_show*1000;
 201   5                
 202   5                    EEPROM_Read(0,ouput,4);
 203   5                    show = ouput[0]*256*256*256+ouput[1]*256*256+ouput[2]*256+ouput[3];
 204   5                break;
 205   5                case 10:door(0xa0,0xaf);break;
 206   5                case 11:door(0xa0,0xef);break;
 207   5                case 9:;break;
 208   5                case 8:;break;
 209   5      //          case 15:EEPROM_Write(1,num);
 210   5      //                  break;
 211   5      //          case 14:date = EEPROM_Read(1);break;
 212   5      //          case 13:num++;EEPROM_Write(0,num);break;
 213   5      //          case 12:num--;EEPROM_Write(0,num);break;
 214   5                case 19:EEPROM_w = 1;break; 
 215   5                case 18:EEPROM_w = 0;
 216   5                        clo_num();break;
 217   5                case 17:dspbuf[6] = num%100/10;
 218   5                        dspbuf[7] = num%10;     break;
 219   5                case 16:door(0x80,0xdf);break;
 220   5                default:break;
 221   5              }
 222   4            }
 223   3          }
 224   2      //    
 225   2      //    if(EEPROM_flag)
 226   2      //      {
 227   2      //        EEPROM_flag =0;
 228   2      //        date = EEPROM_Read(0);
 229   2      //        
 230   2      //        dspbuf[5] = date/100;
 231   2      //        dspbuf[6] = date%100/10;
 232   2      //        dspbuf[7] = date%10;
 233   2      //      }
 234   2          
 235   2      //      dspbuf[0] = temp_test/100000000;
 236   2      //      dspbuf[1] = temp_test%10000000/1000000;
 237   2      //      dspbuf[2] = temp_test%1000000/100000;
C51 COMPILER V9.56.0.0   MAIN                                                              06/17/2022 10:46:34 PAGE 5   

 238   2      //      dspbuf[3] = temp_test%100000/10000;
 239   2      //      dspbuf[4] = temp_test%10000/1000;
 240   2      //      dspbuf[5] = temp_test%1000/100;
 241   2      //      dspbuf[6] = temp_test%100/10;
 242   2      //      dspbuf[7] = temp_test%10;
 243   2          
 244   2      
 245   2            dspbuf[0] = show/100000000;
 246   2            dspbuf[1] = show%10000000/1000000;
 247   2            dspbuf[2] = show%1000000/100000;
 248   2            dspbuf[3] = show%100000/10000;
 249   2            dspbuf[4] = show%10000/1000;
 250   2            dspbuf[5] = show%1000/100;
 251   2            dspbuf[6] = show%100/10;
 252   2            dspbuf[7] = show%10;
 253   2          
 254   2            if(EEPROM_flag)
 255   2            {
 256   3              EEPROM_flag =0;
 257   3      //        EEPROM_Read(2,put,8);
 258   3              
 259   3              dspbuf[0] = put[0];
 260   3              dspbuf[1] = put[1];
 261   3              dspbuf[2] = put[2];
 262   3              dspbuf[3] = put[3];
 263   3              dspbuf[4] = put[4];
 264   3              dspbuf[5] = put[5];
 265   3              dspbuf[6] = put[6];
 266   3              dspbuf[7] = put[7];
 267   3            }
 268   2        }
 269   1      }
*** WARNING C280 IN LINE 161 OF main.c: 'date': unreferenced local variable
*** WARNING C280 IN LINE 164 OF main.c: 'dat_show': unreferenced local variable
 270          
 271          
 272          void timer0() interrupt 1   //````````````````定时器0中断
 273          {
 274   1        static u8  t_20ms = 0,t_50ms = 0;   //MAX = 500 ms
 275   1      
 276   1        //不需要重载装载值
 277   1        
 278   1        display();    //数码管显示函数放里面
 279   1      
 280   1        t_20ms++;
 281   1        t_50ms++;
 282   1      
 283   1        if(t_20ms >= 10)  //每20ms扫描一次按键
 284   1        {
 285   2          t_20ms = 0;
 286   2          key_flag = 1;
 287   2        }   
 288   1        
 289   1        if(t_50ms >= 50)
 290   1        {
 291   2          t_50ms = 0;
 292   2          EEPROM_flag = 1;
 293   2        }
 294   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
C51 COMPILER V9.56.0.0   MAIN                                                              06/17/2022 10:46:34 PAGE 6   

   CODE SIZE        =   1220    ----
   CONSTANT SIZE    =     40    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     15      71
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      2    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  2 WARNING(S),  0 ERROR(S)
